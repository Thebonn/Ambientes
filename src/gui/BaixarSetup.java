package gui;

import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Bonn
 */
public class BaixarSetup extends javax.swing.JFrame {

    /**
     * Creates new form BaixarSetup
     *
     * @param idt
     * @param nomet
     * @param caminhot
     */
    String id = "Nenhum";
    String nome = "Nenhum";

    public BaixarSetup(String idt, String nomet, File caminhot) {
        initComponents();
        try {
            this.setTitle("Confirmação de instalação");
            lblNome.setText(nomet);
            ImageIcon img = new ImageIcon(ImageIO.read(caminhot).getScaledInstance(150, 150, BufferedImage.SCALE_SMOOTH));
            icone.setIcon(img);
            icone.updateUI();
            id = idt;
            nome = nomet;
            pgbProgresso.setVisible(false);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        icone = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblNome = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pgbProgresso = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        icone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/imagens/saida-gif.gif"))); // NOI18N

        jButton1.setFont(new java.awt.Font("Open Sauce One", 0, 12)); // NOI18N
        jButton1.setText("Sim!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblNome.setFont(new java.awt.Font("Open Sauce One Black", 1, 18)); // NOI18N
        lblNome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNome.setText("Nome");

        jButton2.setFont(new java.awt.Font("Open Sauce One", 0, 12)); // NOI18N
        jButton2.setText("Mudei de ideia");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Open Sauce One", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Deseja realmente instalar esse setup?");

        pgbProgresso.setFont(new java.awt.Font("Open Sauce One", 0, 10)); // NOI18N
        pgbProgresso.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(icone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 100, Short.MAX_VALUE))
                    .addComponent(pgbProgresso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(icone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(8, 8, 8)
                .addComponent(pgbProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        pgbProgresso.setVisible(true);
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jLabel1.setText("Instalando...");
        setTitle("Instalando...");
        File diretorio = new File(sistema.Info.localSetups + File.separator + nome);
        if (!diretorio.exists()) {
            diretorio.mkdir();
        }

        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                try {

                    String saidadownload = sistema.Info.localSetups + "/" + nome + "/download.zip";
                    String saidazip = sistema.Info.localSetups + "/" + nome;
                    
                    sistema.Downloader downloader = new sistema.Downloader(sistema.Info.provedor + "/" + id + "/" + id + ".zip", new File(saidadownload));
                    
//                    new Thread(new sistema.Downloader(sistema.Info.provedor + "/" + id + "/" + id + ".zip", new File(saidadownload))).start();
                    
                    downloader.run();

                    while (downloader.baixou == false) {
                        pgbProgresso.setValue((int) downloader.porcentagem);
                        setTitle("Instalando... " + (int) (downloader.porcentagem) + "%");
                        Thread.sleep(50);
                        if (downloader.baixou == true) {
                            //queria entender pq eu to tendo que fazer isso
                            break;
                        }
                    }

                    if (downloader.baixou == true && downloader.porcentagem >= 100) {
                        jLabel1.setText("Descompactando...");
                        setTitle("Descompactando...");
                        pgbProgresso.setIndeterminate(true);

                        sistema.Generico.descompactar(new File(saidadownload), new File(saidazip));
                        JOptionPane.showConfirmDialog(null, "Setup instalado com sucesso!", "Ambientes", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                        new File(saidadownload).delete();
                    } else {
//                        JOptionPane.showConfirmDialog(null, "O setup não foi instalado", "Ambientes", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                        throw new Exception();
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                    JOptionPane.showConfirmDialog(null, "O setup não foi instalado", "Ambientes", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                }
                dispose();
                Thread.currentThread().interrupt();

            }
        });

        t.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaixarSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaixarSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaixarSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaixarSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaixarSetup("Nenhum", "Carregando", null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel icone;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblNome;
    private javax.swing.JProgressBar pgbProgresso;
    // End of variables declaration//GEN-END:variables
}
